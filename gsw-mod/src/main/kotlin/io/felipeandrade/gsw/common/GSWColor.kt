package io.felipeandrade.gsw.common

object GSWColor {
    const val none = -1
    val Black = parseColor(0, 0, 0)
    val WHITE = parseColor(255, 255, 255)
    val Magenta = parseColor(255, 0, 255)
    val Gray = parseColor(128, 128, 128)
    val maroon = parseColor(128, 0, 0)
    val dark_red = parseColor(139, 0, 0)
    val brown = parseColor(165, 42, 42)
    val firebrick = parseColor(178, 34, 34)
    val crimson = parseColor(220, 20, 60)
    val red = parseColor(255, 0, 0)
    val tomato = parseColor(255, 99, 71)
    val coral = parseColor(255, 127, 80)
    val indian_red = parseColor(205, 92, 92)
    val light_coral = parseColor(240, 128, 128)
    val dark_salmon = parseColor(233, 150, 122)
    val salmon = parseColor(250, 128, 114)
    val light_salmon = parseColor(255, 160, 122)
    val orange_red = parseColor(255, 69, 0)
    val dark_orange = parseColor(255, 140, 0)
    val orange = parseColor(255, 165, 0)
    val gold = parseColor(255, 215, 0)
    val dark_golden_rod = parseColor(184, 134, 11)
    val golden_rod = parseColor(218, 165, 32)
    val pale_golden_rod = parseColor(238, 232, 170)
    val dark_khaki = parseColor(189, 183, 107)
    val khaki = parseColor(240, 230, 140)
    val olive = parseColor(128, 128, 0)
    val yellow = parseColor(255, 255, 0)
    val yellow_green = parseColor(154, 205, 50)
    val dark_olive_green = parseColor(85, 107, 47)
    val olive_drab = parseColor(107, 142, 35)
    val lawn_green = parseColor(124, 252, 0)
    val chart_reuse = parseColor(127, 255, 0)
    val green_yellow = parseColor(173, 255, 47)
    val dark_green = parseColor(0, 100, 0)
    val green = parseColor(0, 128, 0)
    val forest_green = parseColor(34, 139, 34)
    val lime = parseColor(0, 255, 0)
    val lime_green = parseColor(50, 205, 50)
    val light_green = parseColor(144, 238, 144)
    val pale_green = parseColor(152, 251, 152)
    val dark_sea_green = parseColor(143, 188, 143)
    val medium_spring_green = parseColor(0, 250, 154)
    val spring_green = parseColor(0, 255, 127)
    val sea_green = parseColor(46, 139, 87)
    val medium_aqua_marine = parseColor(102, 205, 170)
    val medium_sea_green = parseColor(60, 179, 113)
    val light_sea_green = parseColor(32, 178, 170)
    val dark_slate_gray = parseColor(47, 79, 79)
    val teal = parseColor(0, 128, 128)
    val dark_cyan = parseColor(0, 139, 139)
    val aqua = parseColor(0, 255, 255)
    val cyan = parseColor(0, 255, 255)
    val light_cyan = parseColor(224, 255, 255)
    val dark_turquoise = parseColor(0, 206, 209)
    val turquoise = parseColor(64, 224, 208)
    val medium_turquoise = parseColor(72, 209, 204)
    val pale_turquoise = parseColor(175, 238, 238)
    val aqua_marine = parseColor(127, 255, 212)
    val powder_blue = parseColor(176, 224, 230)
    val cadet_blue = parseColor(95, 158, 160)
    val steel_blue = parseColor(70, 130, 180)
    val corn_flower_blue = parseColor(100, 149, 237)
    val deep_sky_blue = parseColor(0, 191, 255)
    val dodger_blue = parseColor(30, 144, 255)
    val light_blue = parseColor(173, 216, 230)
    val sky_blue = parseColor(135, 206, 235)
    val light_sky_blue = parseColor(135, 206, 250)
    val midnight_blue = parseColor(25, 25, 112)
    val navy = parseColor(0, 0, 128)
    val dark_blue = parseColor(0, 0, 139)
    val medium_blue = parseColor(0, 0, 205)
    val blue = parseColor(0, 0, 255)
    val royal_blue = parseColor(65, 105, 225)
    val blue_violet = parseColor(138, 43, 226)
    val indigo = parseColor(75, 0, 130)
    val dark_slate_blue = parseColor(72, 61, 139)
    val slate_blue = parseColor(106, 90, 205)
    val medium_slate_blue = parseColor(123, 104, 238)
    val medium_purple = parseColor(147, 112, 219)
    val dark_magenta = parseColor(139, 0, 139)
    val dark_violet = parseColor(148, 0, 211)
    val dark_orchid = parseColor(153, 50, 204)
    val medium_orchid = parseColor(186, 85, 211)
    val purple = parseColor(128, 0, 128)
    val thistle = parseColor(216, 191, 216)
    val plum = parseColor(221, 160, 221)
    val violet = parseColor(238, 130, 238)
    val magenta_fuchsia = parseColor(255, 0, 255)
    val orchid = parseColor(218, 112, 214)
    val medium_violet_red = parseColor(199, 21, 133)
    val pale_violet_red = parseColor(219, 112, 147)
    val deep_pink = parseColor(255, 20, 147)
    val hot_pink = parseColor(255, 105, 180)
    val light_pink = parseColor(255, 182, 193)
    val pink = parseColor(255, 192, 203)
    val antique_white = parseColor(250, 235, 215)
    val beige = parseColor(245, 245, 220)
    val bisque = parseColor(255, 228, 196)
    val blanched_almond = parseColor(255, 235, 205)
    val wheat = parseColor(245, 222, 179)
    val corn_silk = parseColor(255, 248, 220)
    val lemon_chiffon = parseColor(255, 250, 205)
    val light_golden_rod_yellow = parseColor(250, 250, 210)
    val light_yellow = parseColor(255, 255, 224)
    val saddle_brown = parseColor(139, 69, 19)
    val sienna = parseColor(160, 82, 45)
    val chocolate = parseColor(210, 105, 30)
    val peru = parseColor(205, 133, 63)
    val sandy_brown = parseColor(244, 164, 96)
    val burly_wood = parseColor(222, 184, 135)
    val tan = parseColor(210, 180, 140)
    val rosy_brown = parseColor(188, 143, 143)
    val moccasin = parseColor(255, 228, 181)
    val navajo_white = parseColor(255, 222, 173)
    val peach_puff = parseColor(255, 218, 185)
    val misty_rose = parseColor(255, 228, 225)
    val lavender_blush = parseColor(255, 240, 245)
    val linen = parseColor(250, 240, 230)
    val old_lace = parseColor(253, 245, 230)
    val papaya_whip = parseColor(255, 239, 213)
    val sea_shell = parseColor(255, 245, 238)
    val mint_cream = parseColor(245, 255, 250)
    val slate_gray = parseColor(112, 128, 144)
    val light_slate_gray = parseColor(119, 136, 153)
    val light_steel_blue = parseColor(176, 196, 222)
    val lavender = parseColor(230, 230, 250)
    val floral_white = parseColor(255, 250, 240)
    val alice_blue = parseColor(240, 248, 255)
    val ghost_white = parseColor(248, 248, 255)
    val honeydew = parseColor(240, 255, 240)
    val ivory = parseColor(255, 255, 240)
    val azure = parseColor(240, 255, 255)
    val snow = parseColor(255, 250, 250)
    val jet_grey_gray = parseColor(52, 52, 52)
    val dim_gray_dim_grey = parseColor(105, 105, 105)
    val gray_grey = parseColor(128, 128, 128)
    val dark_gray_dark_grey = parseColor(169, 169, 169)
    val silver = parseColor(192, 192, 192)
    val light_gray_light_grey = parseColor(211, 211, 211)
    val gainsboro = parseColor(220, 220, 220)
    val white_smoke = parseColor(245, 245, 245)

    //    RGB = (R*65536)+(G*256)+B , (when R is RED, G is GREEN and B is BLUE)
    fun parseColor(red: Int, green: Int, blue: Int): Int {
        val redMask = red shl 16 and 0x00FF0000 //Shift red 16-bits and mask out other stuff
        val greenMask = green shl 8 and 0x0000FF00 //Shift Green 8-bits and mask out other stuff
        val blueMask = blue and 0x000000FF //Mask out anything not blue.
        return -0x1000000 or redMask or greenMask or blueMask //0xFF000000 for 100% Alpha. Bitwise OR everything together.
    } //    public static int parseColor(String rawStr) {
    //        String red, green, blue;
    //
    //        String trimmedStr = rawStr.replaceAll("[^a-fA-F0-9]", "");
    //
    //        if (trimmedStr.length() >= 6) {
    //
    //        } else if (trimmedStr.length() >= 3) {
    //
    //        } else return parse
    //
    //
    //
    //            return parseColor(
    //                Integer.parseInt(red),
    //                Integer.parseInt(green),
    //                Integer.parseInt(blue)
    //        );
    //    }
}